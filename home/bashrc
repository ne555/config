#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

#locale
export LC_ALL=en_US.utf8

alias ping='ping -4'
alias emacs='emacs -nw'
#diccionario de la rae
alias rae='dict --host localhost'
#alias pacman='pacman --color always'
alias g++='g++ -fno-diagnostics-show-caret'
alias gcc='gcc -fno-diagnostics-show-caret'
alias grep='grep --color=auto'
alias ls='ls --color=auto'
#alias mupdf='mupdf-gl'
alias nload='nload -u K -U K'


alias pacman='pacman --color always'
alias pdfview='apvlv'
#alias rae='dict --host localhost'
alias rename='perl-rename'
alias openfoam='source /opt/OpenFOAM/OpenFOAM-2.4.0/etc/bashrc'

alias r='R --no-save --quiet'

alias startx='startx ~/.config/xinitrc'
alias stellarium='stellarium --config-file ~/.config/stellarium.ini --user-dir ~/.local/share/stellarium'
alias w3m='w3m -config ~/.config/w3m/config'

#to have history en line editing
alias octave='rlwrap octave-cli -q'
alias youtube-viewer='rlwrap youtube-viewer -q'

#weird bugs
#(clang_complete)
alias vim="vim 2>/dev/null"

# Using .config as config directory
alias abook='abook --config ~/.config/abook --datafile ~/.config/addressbook.mutt'
alias alpine='alpine -p ~/.config/pinerc'
alias amule='amule --config-dir=~/.config/amule'
alias apvlv='apvlv -c ~/.config/apvlv.rc'
alias dgen='dgen -r ~/.config/dgenrc'
alias emacs='emacs -nw -l ~/.config/emacs.el'
alias finch='finch --config ~/.config/purple/'
alias irssi='irssi --config ~/.config/irssi --home=~/.local/share/irssi'
alias lingot='lingot -c ~/.config/lingot'
alias mutt='mutt -F ~/.config/muttrc'
alias ncmpcpp='ncmpcpp --config ~/.config/ncmpcpp --bindings ~/.config/ncmpcpp.bindings'
alias pcsx2='pcsx2 --cfg=~/.config/pcsx2'
alias pcsxr='pcsxr -cfg=~/.config/pcsxr'
alias snes9x='snes9x -conf ~/.config/snes9x'
alias startx='startx ~/.config/xinitrc'
alias tmux='tmux -u -2 -f ~/.config/tmux.conf'
#alias vim='vim -u ~/.config/vimrc'

#using .local/share as data directory
alias sdcv="sdcv --data-dir ~/.local/share/"
alias dictionary="sdcv --data-dir ~/.local/share/"

##Variables to use XDG especification
export GIMP2_DIRECTORY='/home/ne555/.local/share/gimp'
#export GIMP2_DATADIR=
#export GIMP2_LOCALEDIR=
#export GIMP2_PLUGINDIR=
export GIMP2_SYSCONFDIR='/home/ne555/.config/gimp'

#start x at login
if [ "$(tty)" = "/dev/tty1" -o "$(tty)" = "/dev/vc/1" ]; then
	#startxfce4 
	startx 
fi

#The Git package comes with a prompt script. To enable it, source the /usr/share/git/completion/git-prompt.sh and set a custom prompt with the %s parameter:
#For Bash: PS1='[\u@\h \W$(__git_ps1 " (%s)")]\$ '
PS1='$([ -n "$TMUX" ] && tmux setenv TMUXPWD_$(tmux display -p "#I") "$PWD")\[\033[1;44;1;42m\]\h@\u:\W\[\033[36m\]`__git_ps1`\[\033[32m\]\$\[\033[00m\] '

export TERM=screen-256color

#man pages with color
export LESS_TERMCAP_mb=$'\E[01;31m' # begin blinking
export LESS_TERMCAP_md=$'\E[01;37m' # begin bold
export LESS_TERMCAP_me=$'\E[0m' # end mode
export LESS_TERMCAP_se=$'\E[0m' # end stand-out mode
export LESS_TERMCAP_so=$'\E[01;44;33m' # begin stand-out mode - info box
export LESS_TERMCAP_ue=$'\E[0m' # end underline
export LESS_TERMCAP_us=$'\E[00;32m' # begin underline

export EDITOR=nvim

shopt -s checkwinsize
#Todas las screens comparten el mismo historial
shopt -s histappend
#export PROMPT_COMMAND="$PROMPT_COMMAND:history -a: history -n"
#export HISTCONTROL=ignorespace:erasedups
export HISTCONTROL=erasedups
export HISTIGNORE="clear:exit:[bf]g:ls:cd:ls *:cd *:  *:mkdir *"
export HISTSIZE=10000
export HISTFILESIZE=4000000

d=~/.config/dircolors
test -r $d && eval "$(dircolors $d)"

#vi bindings
set -o vi

#don't clear the screen on exit
export PAGER='less -X'

#ignore hidden files in bash completion
bind 'set match-hidden-files off'

export PYTHONDONTWRITEBYTECODE="non empty string"


function proxy(){
	proxyserver=192.168.0.120
	#proxyserver=192.168.0.121
	#proxyserver=10.0.2.3
	port=3128
	#export http_proxy="http://$username:$password@$proxyserver:$port"
	export http_proxy="http://$proxyserver:$port"
	export https_proxy=$http_proxy
	export ftp_proxy=$http_proxy
	export rsync_proxy=$http_proxy
	export no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com"
	echo -e "\nProxy environment variable set."
}
function proxyoff(){
	unset HTTP_PROXY
	unset http_proxy
	unset HTTPS_PROXY
	unset https_proxy
	unset FTP_PROXY
	unset ftp_proxy
	unset RSYNC_PROXY
	unset rsync_proxy
	echo -e "\nProxy environment variable removed."
}

export PATH=/usr/lib/ccache:$PATH:~/usr/bin:~/.local/bin
function homeusr(){
	export C_INCLUDE_PATH=$C_INCLUDE_PATH:~/usr/local/include:~/.local/include
	export CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:~/usr/local/include:~/.local/include
	export PYTHONPATH=$PYTHONPATH:~/usr/local/lib/python
	export LIBRARY_PATH=$LIBRARY_PATH:~/usr/local/lib:~/usr/local/lib64
	export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:~/usr/local/lib:~/usr/local/lib64
	export PKG_CONFIG_PATH=~/.local/lib/pkgconfig:~/usr/local/lib/pkgconfig:~/usr/local/lib64/pkgconfig:${PKG_CONFIG_PATH}
}

#no blocking the screen with <C-s>
stty -ixon -ixoff

# ssh-keys git
if ! pgrep -u "$USER" ssh-agent > /dev/null; then
    #ssh-agent -t 1h > "${XDG_RUNTIME_DIR}/ssh-agent.env"
    ssh-agent -t 1h > "/tmp/ssh-agent.env"
fi
if [[ ! "$SSH_AUTH_SOCK" ]]; then
    #source "${XDG_RUNTIME_DIR}/ssh-agent.env" >/dev/null
    source "/tmp/ssh-agent.env" >/dev/null
fi
