#/* vim: set filetype=gitconfig:*/
[core]
    excludesfile = /home/wbedrij/.config/git/ignore
    pager = delta

[include]
    path = ~/.config/git/user

[github]
    user = ne555

[init]
    defaultBranch = master

[interactive]
    diffFilter = delta --color-only

[delta]
    features = decorations
    light = false
    navigate = true # n/N to move between diff
    side-by-side = true
    true-color = always

[delta "decorations"]
    file-style = yellow
    hunk-header-style = omit

[diff]
    tool = vimdiff
    colorMoved = default

[difftool]
    prompt = false

[alias]
    d = difftool

[status]
    showUntrackedFiles = no

[color]
    ui = true
[color "branch"]
    current = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[alias]
  # %h -> hash
  # %ar -> relative date
  # %ad -> date
  # %an -> author
  # %s -> commit title
    lgbt="log --graph --pretty=format:'%C(auto)%h %an %D(%ad): %s' --date=short --abbrev-commit"
    graph="log --oneline --graph --decorate"
    graphbranch="lgbt --simplify-by-decoration"
    subtree-add = "!f() { git subtree add --prefix src/$1 $1 master; }; f"
    subtree-push = "!f() { git subtree push --prefix src/$1 $1 master; }; f"
    subtree-pull = "!f() { git subtree pull --prefix src/$1 $1 master; }; f"
    stash-dirty = "!f() { git add --update; git stash apply && git reset; }; f"

  # Muestra el hash del primer punto de bifurcaci√≥n entre las ramas
    oldest-ancestor = !bash -c 'diff -u <(git rev-list --first-parent "${1:-master}") <(git rev-list --first-parent "${2:-HEAD}") | sed -ne \"s/^ //p\" | head -1' -
  # diff contra ese punto
    branchdiff = !bash -c 'git diff "${1}" $(git oldest-ancestor "${1}" "${2}")' -
  # log contra ese punto
    branchlog = !bash -c 'git log --graph --decorate --oneline $(git oldest-ancestor "${2:-HEAD}" "${1}").."${2-HEAD}"' -

[merge]
    tool = diffconflicts
    conflictsyle = diff3

[mergetool]
# automatically launch merge tool without displaying a prompt
    prompt = false
    keepBackup = false

# define command which will be used when "nvim" is set as a merge tool
[mergetool "nvim"]
    cmd = nvim -d \"$LOCAL\" \"$MERGED\" \"$REMOTE\"

[mergetool "fugitive"]
    cmd = nvim -c \"Gdiff!\" \"$MERGED\"
    trustExitCode = true

[mergetool "diffconflicts"]
  #cmd = diffconflicts nvim $BASE $LOCAL $REMOTE $MERGED
    cmd = nvim -c DiffConflictsWithHistory "$MERGED" "$BASE" "$LOCAL" "$REMOTE"
    trustExitCode = true

[credential]
    helper = cache

[filter "lfs"]
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
    clean = git-lfs clean -- %f
[protocol "file"]
    allow = always

[submodule]
    recurse = true
